@import url("https://fonts.googleapis.com/css?family=Lato&display=swap");

:root {
  /* adds a dual box shadow interpolation */
  --box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

* {
  box-sizing: border-box;
}

body {
  background-color: #f7f7f7;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh; /* takes the full height of viewport so body stays vertically centered because of flex properties */
  margin: 0;
  font-family: "Lato", sans-serif;
}

.container {
  margin: 30px auto;
  width: 350px;
}

h1 {
  /* balance no. */
  letter-spacing: 1px;
  margin: 0;
}

h3 {
  /* History, Add new Transaction */
  border-bottom: 1px solid #bbb;
  padding-bottom: 10px;
  margin: 40px 0 10px;
}

h4 {
  /*INCOME and EXPENSE headings */
  margin: 0;
  text-transform: uppercase;
}

.inc-exp-container {
  background-color: #fff;
  box-shadow: var(--box-shadow);
  padding: 20px;
  display: flex;
  justify-content: space-between;
  margin: 20px 0;
}

.inc-exp-container > div {
  /* Equivalent to flex: 1 0px. 
    It makes the flex item flexible and sets the flex basis to zero, 
    resulting in an item that receives the specified proportion of the remaining space.
    If all items in the flex container use this pattern, 
    their sizes will be proportional to the specified flex factor.
    source: https://css-tricks.com/almanac/properties/f/flex/ */
  flex: 1; /* both div take the equal proportion of flex container */
  text-align: center;
}

.inc-exp-container > div:first-of-type {
  border-right: 1px solid #dedede;
}

.money {
  font-size: 20px;
  letter-spacing: 1px;
  margin: 5px 0;
}

.money.plus {
  color: #2ecc71;
}

.money.minus {
  color: #c0392b;
}

label {
  display: inline-block; /* allows to set margin and width properties */
  margin: 10px 0;
}

input[type="text"],
input[type="number"] {
  border: 1px solid #dedede;
  border-radius: 2px;
  display: block; /* input occupies a seprate line*/
  font-size: 16px;
  padding: 10px;
  width: 100%;
}

.btn {
  cursor: pointer;
  background-color: #9c88ff;
  box-shadow: var(--box-shadow);
  color: #fff;
  border: 0;
  /* A button is by default an inline-block, 
  so multiple buttons without a line break or some will be displayed next to each other.
  If you want them to be under each other, you could display them as block */
  display: block;
  font-size: 16px;
  margin: 10px 0 30px;
  padding: 10px;
  width: 100%;
}

/*The :focus pseudo class in CSS is used for styling an element
that is currently targeted by the keyboard, or activated by the mouse.  */
.btn:focus,
.delete-btn:focus {
  /*An outline is a line that is drawn around elements, 
  outside the borders, to make the element "stand out". */
  outline: 0;
}

.list {
  list-style-type: none;
  padding: 0;
  margin-bottom: 40px;
}

.list li {
  background-color: #fff;
  box-shadow: var(--box-shadow);
  color: #333;
  display: flex;
  justify-content: space-between;
  position: relative; /* delete button inside li needs to be position absolute */
  padding: 10px;
  margin: 10px 0;
}

.list li.plus {
  border-right: 5px solid #2ecc71;
}

.list li.minus {
  border-right: 5px solid #c0392b;
}

.delete-btn {
  cursor: pointer;
  background-color: #e74c3c;
  color: #fff;
  border: 0;
  font-size: 20px;
  line-height: 20px;
  padding: 2px 5px;
  position: absolute;
  top: 50%;
  left: 0;
  transform: translate(-100%, -50%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.list li:hover .delete-btn {
  opacity: 1;
}
